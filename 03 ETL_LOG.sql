DROP TABLE S1_STAGE_ETL_LOG CASCADE CONSTRAINTS;

CREATE TABLE S1_STAGE_ETL_LOG
(ISSUE_ID NUMBER(5) NOT NULL, 
TABLE_NAME VARCHAR2(20),
DATA_ERROR_CODE NUMBER(5),
ISSUE_DESC VARCHAR2(50),
ISSUE_DATE DATE, 
ISSUE_STATUS VARCHAR2(20),
STATUS_UPDATE_DATE DATE);

DROP SEQUENCE S1_STAGE_ETL_LOG_SEQ;

CREATE SEQUENCE S1_STAGE_ETL_LOG_SEQ
START WITH 1
INCREMENT BY 1
MAXVALUE 10000
MINVALUE 1;

DROP TRIGGER TRG_QUA_CHK_ADM;

CREATE OR REPLACE TRIGGER TRG_QUA_CHK_ADM
  BEFORE UPDATE ON S1_STAGE_ADMISSION            
  FOR EACH ROW 
BEGIN  
  INSERT INTO S1_STAGE_ETL_LOG
  (ISSUE_ID,  TABLE_NAME,  DATA_ERROR_CODE,  ISSUE_DESC,  ISSUE_DATE, ISSUE_STATUS, STATUS_UPDATE_DATE)
   VALUES
  (EL_SEQ.NEXTVAL, 'S1_STAGE_ADMISSION', '0', 'QUALITY CHECKS', SYSDATE, 'COMPLETED', SYSDATE);
END;

DROP TRIGGER TRG_QUA_CHK_WARD;

CREATE OR REPLACE TRIGGER TRG_QUA_CHK_WARD
  BEFORE UPDATE ON S1_STAGE_WARD            
  FOR EACH ROW 
BEGIN  
  INSERT INTO S1_STAGE_ETL_LOG
  (ISSUE_ID,  TABLE_NAME,  DATA_ERROR_CODE,  ISSUE_DESC,  ISSUE_DATE, ISSUE_STATUS, STATUS_UPDATE_DATE)
   VALUES
  (EL_SEQ.NEXTVAL, 'S1_STAGE_WARD', '0', 'QUALITY CHECKS', SYSDATE, 'COMPLETED', SYSDATE);
END;

DROP TRIGGER TRG_QUA_CHK_BED;

CREATE OR REPLACE TRIGGER TRG_QUA_CHK_BED
  BEFORE UPDATE ON S1_STAGE_BED      
  FOR EACH ROW 
BEGIN  
  INSERT INTO S1_STAGE_ETL_LOG
  (ISSUE_ID,  TABLE_NAME,  DATA_ERROR_CODE,  ISSUE_DESC,  ISSUE_DATE, ISSUE_STATUS, STATUS_UPDATE_DATE)
   VALUES
  (EL_SEQ.NEXTVAL, 'S1_STAGE_BED', '0', 'QUALITY CHECKS', SYSDATE, 'COMPLETED', SYSDATE);
END;

DROP TRIGGER TRG_QUA_CHK_CARE_CENTRE;

CREATE OR REPLACE TRIGGER TRG_QUA_CHK_CARE_CENTRE
  BEFORE UPDATE ON S1_STAGE_CARE_CENTRE          
  FOR EACH ROW 
BEGIN  
  INSERT INTO S1_STAGE_ETL_LOG
  (ISSUE_ID,  TABLE_NAME,  DATA_ERROR_CODE,  ISSUE_DESC,  ISSUE_DATE, ISSUE_STATUS, STATUS_UPDATE_DATE)
   VALUES
  (EL_SEQ.NEXTVAL, 'S1_STAGE_CARE_CENTRE', '0', 'QUALITY CHECKS', SYSDATE, 'COMPLETED', SYSDATE);
END;
